{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pageData","setPageData","pageNumber","setPageNumber","isFetching","setIsFetching","useEffect","fetchData","window","addEventListener","handleScroll","fetchMoreListItems","Math","ceil","innerHeight","scrollY","document","documentElement","offsetHeight","fetch","headers","Accept","then","response","json","myJson","page","catch","console","log","className","map","content","image","src","alt","name","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"2MAoGeA,MAlGf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WAERC,IACAC,OAAOC,iBAAiB,SAAUC,KACjC,IAGHJ,qBAAU,WACJF,GAAYO,MACf,CAACP,IAGJ,IAAMO,EAAqB,WACzBJ,IACAF,GAAc,IAGVK,EAAe,YAGjBE,KAAKC,KAAKL,OAAOM,YAAcN,OAAOO,UACpCC,SAASC,gBAAgBC,cAC3Bd,IAEAC,GAAc,IAGZE,EAAY,WAEhBY,MAAM,gCAAD,OAAiCjB,EAAjC,SAAoD,CACvDkB,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAELxB,EAAY,GAAD,mBAAKD,GAAL,gBAAoByB,EAAOC,YAEvCC,OAAM,kBAAMC,QAAQC,IAAI,eAE3B1B,EAAcD,EAAa,IAI7B,OACE,mCACE,sBAAK4B,UAAU,WAAf,UACE,oBAAIA,UAAU,sCAAd,6BADF,OAEG9B,QAFH,IAEGA,OAFH,EAEGA,EAAU+B,KAAI,SAACL,GAAD,OACb,qBACEI,UAAU,oEACV,cAAY,YAFd,SAIE,qBAAKA,UAAU,kFAAf,SACGJ,EAAK,iBAAiBM,QAAQD,KAAI,SAACE,GAAD,OACjC,sBAAsBH,UAAU,iBAAhC,UACE,qBACEA,UAAU,+HACV,cAAY,cAFd,SAIE,qBACEI,IAAG,mBAAcD,EAAM,iBACvBE,IAAKF,EAAMG,KACXN,UAAU,mEAGd,qBAAKA,UAAU,8BAAf,SACE,8BACE,oBAAIA,UAAU,qBAAd,SACE,oBAAGO,KAAMJ,EAAMI,KAAf,UACE,sBACE,cAAY,OACZP,UAAU,qBAEXG,EAAMG,gBAnBPH,EAAMG,sBC5DhCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,W","file":"static/js/main.794af09b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [pageData, setPageData] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    //initial load\n    fetchData();\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // flags whether fetching or not\n  useEffect(() => {\n    if (isFetching) fetchMoreListItems();\n  }, [isFetching]);\n\n  //trigger on Scroll\n  const fetchMoreListItems = () => {\n    fetchData();\n    setIsFetching(false);\n  };\n\n  const handleScroll = () => {\n    // logic to check if the scroll has exceeded the window height or is  scrolling then fetch data\n    if (\n      Math.ceil(window.innerHeight + window.scrollY) >=\n        document.documentElement.offsetHeight ||\n      isFetching\n    )\n      setIsFetching(true);\n  };\n\n  const fetchData = () => {\n    // mock call\n    fetch(`./API/CONTENTLISTINGPAGE-PAGE${pageNumber}.json`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((myJson) => {\n        // update pageData\n        setPageData([...pageData, { ...myJson.page }]);\n      })\n      .catch(() => console.log(\"file end\"));\n    //pageNumber state for the next trigger\n    setPageNumber(pageNumber + 1);\n  };\n\n  // rendering the page\n  return (\n    <>\n      <div className=\"bg-black\">\n        <h2 className=\"text-2xl  tracking-tight text-white\">Romantic Comedy</h2>\n        {pageData?.map((page) => (\n          <div\n            className=\"max-w-2xl mx-auto py-16 px-4 sm:py-6 sm:px-6 lg:max-w-7xl lg:px-8\"\n            data-testid=\"imagePage\"\n          >\n            <div className=\"mt-6 grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-3 lg:grid-cols-3 xl:gap-x-8\">\n              {page[\"content-items\"].content.map((image) => (\n                <div key={image.name} className=\"group relative\">\n                  <div\n                    className=\"w-full min-h-80 bg-gray-200 aspect-w-1 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75 lg:h-full lg:aspect-none\"\n                    data-testid=\"imageTestId\"\n                  >\n                    <img\n                      src={`./Slices/${image[\"poster-image\"]}`}\n                      alt={image.name}\n                      className=\"w-full h-full object-center object-cover lg:w-full lg:h-full\"\n                    />\n                  </div>\n                  <div className=\"mt-2.4 flex justify-between\">\n                    <div>\n                      <h3 className=\"text-sm text-white\">\n                        <a href={image.href}>\n                          <span\n                            aria-hidden=\"true\"\n                            className=\"absolute inset-0\"\n                          />\n                          {image.name}\n                        </a>\n                      </h3>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}